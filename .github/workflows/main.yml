---
name: main
on:
  push:
    branches: [ "master" ]
  pull_request:
  workflow_dispatch:
jobs:
  Test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Set up database schema
        run: bin/rails db:schema:load

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.18.0'

      - name: Install yarn
        run: npm i -g yarn

      - name: yarn
        run: yarn

      - name: Get yarn cache directory path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install yarn packages
        run: |
          yarn install --pure-lockfile

      - name: Compile assets
        run: bin/rails assets:precompile

      - name: Run tests
        run: bin/rspec

      - name: Run quality
        run: bin/quality

  Deploy:
    needs: Test
    runs-on: ubuntu-latest

    steps:

      
      - uses: actions/checkout@master
      - name: Deploy to render
        uses: JorgeLNJunior/render-deploy@v1.3.2
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          clear_cache: false
...
